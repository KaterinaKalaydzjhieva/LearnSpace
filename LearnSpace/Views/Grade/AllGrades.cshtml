@model List<GradeCourseViewModel>

<div class="container mt-5">
    <h1 class="mb-4 text-center">Grades List</h1>
    <p class="text-muted">Total Grades: <strong>@Model.Count</strong></p>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center">No grades available to display.</div>
    }
    else
    {
        <div class="table-responsive" style="border: 3px solid black;">
            <table class="table table-bordered table-striped mb-0">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Course Name</th>
                        <th scope="col">Grades</th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var course in Model)
                    {
                        <tr>
                            <td>@course.Name</td>
                            <td>
                                @if (course.Grades.Any())
                                {
                                    <ul class="list-unstyled d-flex flex-wrap">
                                        @foreach (var grade in course.Grades)
                                        {
                                            <li class="me-2 mb-2">
                                                <a asp-controller="Grade" asp-action="GradeInfo" asp-route-id="@grade.Id" class="text-decoration-none">
                                                    <div class="grade-box text-white text-center fw-bold"
                                                     style="width: 50px; height: 50px; line-height: 50px; border-radius: 5px; background-color: @(GetGradeColor(grade.Score));">
                                                    @grade.Score
                                                </div>
                                                </a>
                                                
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <span>No grades recorded</span>
                                }
                            </td>
                            <td class="text-center">
                                @if (course.Grades.Any())
                                {
                                    @foreach (var grade in course.Grades)
                                    {
                                        <form method="get" class="d-inline-block" action="/Grade/Details">
                                            <input type="hidden" name="gradeId" value="@grade.Id" />
                                            <button type="submit" class="btn btn-info btn-sm mb-2">
                                                Details
                                            </button>
                                        </form>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">No actions available</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Optional: Add any JS logic here if needed for dynamic interactions.
    </script>
}

@functions {
    // Helper method to calculate the background color based on the grade score
    public string GetGradeColor(double score)
    {
        if (score <= 2.5) return "#dc3545"; // Red for lowest scores
        if (score <= 3) return "#fd7e14"; // Orange
        if (score <= 4) return "#ffc107"; // Yellow
        if (score <= 5) return "#4169E1"; // Light green
        return "#198754";               // Dark green for highest scores
    }
}
