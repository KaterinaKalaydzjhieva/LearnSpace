@model List<UserViewModel>

@{
    ViewData["Title"] = "User Management";
}

<div class="container mt-5">
    <h2 class="mb-4 text-center" style="font-size:40px; font-weight:700;">@ViewData["Title"]</h2>

    <p class="text-muted">Total Users: <strong>@Model.Count</strong></p>

    @if (Model != null && Model.Any())
    {
        <table class="table table-hover table-bordered" style="border: 3px solid black;">
            <thead class="table-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">User Name</th>
                    <th scope="col">Full Name</th>
                    <th scope="col">Roles</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    var user = Model[i];
                    <tr>
                        <th scope="row">@(i + 1)</th>
                        <td>@user.UserName</td>
                        <td>@user.FullName</td>
                        <td>
                            @if (user.Roles != null && user.Roles.Any())
                            {
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var role in user.Roles)
                                    {
                                        <span class="badge" style="background-color: @GetRoleColor(role); padding: 0.6em 1em; font-size: 0.9em; font-weight: 600;">
                                            @role
                                        </span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span>No roles assigned</span>
                            }
                        </td>
                        <td >
                            <div class="d-flex flex-column align-items-start gap-2">
                                <form asp-area="Admin" asp-controller="Admin" asp-action="AddRole" method="post" class="d-flex gap-2">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <select name="role" class="form-select form-select-sm w-auto" required>
                                        <option value="">Select Role to Add</option>
                                        @{
                                            var allRoles = new List<string> { "Administrator", "Teacher", "Student" };
                                            allRoles = allRoles.Where(r => !user.Roles.Contains(r)).ToList();

                                            foreach (var role in allRoles)
                                            {
                                                <option value="@role">@role</option>
                                            }
                                        }
                                    </select>
                                    <button type="submit" class="btn btn-primary btn-sm">Add Role</button>
                                </form>

                                <form asp-area="Admin" asp-controller="Admin" asp-action="DeleteRole" method="post" class="d-flex gap-2">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <select name="role" class="form-select form-select-sm w-auto" required>
                                        <option value="">Select Role to Delete</option>
                                        @if (user.Roles != null && user.Roles.Any())
                                        {
                                            foreach (var role in user.Roles)
                                            {
                                                <option value="@role">@role</option>
                                            }
                                        }
                                    </select>
                                    <button onclick="return confirm('Are you sure you want to delete this role?');" type="submit" class="btn btn-danger btn-sm">Delete Role</button>
                                </form>
                                @if (!user.Roles.Contains("Administrator"))
                                {
                                    <form asp-area="Admin" asp-controller="Admin" asp-action="DeleteUser" method="post">
                                        <input type="hidden" name="userId" value="@user.Id" />
                                        <button onclick="return confirm('Are you sure you want to delete this user?');" type="submit" class="btn btn-danger btn-sm">
                                            Delete User
                                        </button>
                                    </form>
                                }                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-warning text-center" role="alert">
            No users are currently available.
        </div>
    }
</div>

@functions {
    private string GetRoleColor(string role)
    {
        return role switch
        {
            "Administrator" => "#ff4d4f",     // Red for Admin
            "Teacher" => "#52c41a",   // Green for Teacher
            "Student" => "#faad14",   // Orange for Student
            _ => "#d9d9d9"            // Default gray for unknown roles
        };
    }
}
