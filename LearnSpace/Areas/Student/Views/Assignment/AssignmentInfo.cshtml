@model AssignmentInfoViewModel

@{
	ViewBag.Title = "Assignment Details";
	var dueDate = Model.DueDate;
}

<div class="container mt-5">
	<h2 class="mb-4 text-center">@ViewBag.Title</h2>

	<div class="card shadow-lg" style="margin-bottom: 8%;">
		<div class="card-header bg-primary text-white">
			<h4>@Model.Title</h4>
		</div>
		<div class="card-body">
			<p><strong>Class Name:</strong> @Model.ClassName</p>
			<p><strong>Teacher:</strong> @Model.TeacherName</p>
			<p><strong>Description:</strong></p>
			<p class="text-justify">@Model.Description</p>
			<p><strong>Due Date:</strong> @Model.DueDate</p>

			<form asp-controller="Submission" asp-action="SubmitAssignment" method="post" enctype="multipart/form-data">
				<input type="hidden" name="assignmentId" value="@Model.Id" />
				<div class="file-upload-container d-flex align-items-center">
					<label class="me-3">Upload File:</label>	
					<input type="file" name="filePath" id="fileInput" class="form-control" />
					<span id="uploadMessage" class="ms-3 text-success" style="display: none;">File uploaded</span>
				</div>
				<div id="timeMessage" class="text-danger mt-2"></div>
				<div class="text-center m-3">
					<button id="submitButton" type="submit" class="btn btn-primary">Submit</button>
				</div>
			</form>
			@if (Model.IsSubmitted)
			{
				<div class="alert alert-success text-center mt-4">
					<strong>Assignment already submitted on:</strong> @Model.SubmissionDate
				</div>
			}
			else
			{
				<div class="alert alert-warning text-center mt-4">
					<strong>No submission found.</strong>
				</div>
			}

			@if (TempData["Errors"] != null)
			{
				var errors = TempData["Errors"] as List<string>;
				<div class="alert alert-danger">
					<ul>
						@foreach (var error in errors)
						{
							<li>@error</li>
						}
					</ul>
				</div>
			}
			<div class="card-footer text-center">
				<button onclick="history.go(-1)" class="btn btn-secondary">Back to Assignments</button>
			</div>
		</div>
	</div>
</div>
<script>
	// Parse the due date from the server-rendered string
	const dueDate = new Date('@dueDate'); // Server-provided due date
	const fileInput = document.getElementById('fileInput');
	const timeMessage = document.getElementById('timeMessage');
	const submitButton = document.getElementById('submitButton');
	const uploadMessage = document.getElementById('uploadMessage');

	// Update the timer every second
	function updateTimer() {
		const now = new Date();
		const timeLeft = dueDate - now;

		if (timeLeft > 0) {
			const hours = Math.floor(timeLeft / (1000 * 60 * 60));
			const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
			const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

			timeMessage.textContent = `Time remaining: ${hours}h ${minutes}m ${seconds}s`;
			fileInput.disabled = false;
			submitButton.disabled = fileInput.files.length === 0;
		} else {
			// Disable file input and submission
			fileInput.disabled = true;
			submitButton.disabled = true;
			timeMessage.textContent = 'Time is up! You can no longer upload a file.';
			clearInterval(timerInterval); // Stop the timer
		}
	}

	// Start the live timer
	const timerInterval = setInterval(updateTimer, 1000); // Update every second
	updateTimer(); // Call immediately to avoid 1-second delay

	// Handle file input changes
	fileInput.addEventListener('change', function () {
		if (fileInput.files.length > 0) {
			const fileName = fileInput.files[0].name;
			showUploadMessage(fileName);
			submitButton.disabled = false; // Enable submit button if time is valid
		} else {
			uploadMessage.style.display = 'none';
			submitButton.disabled = true;
		}
	});

	// Show upload message
	function showUploadMessage(fileName) {
		uploadMessage.style.display = 'inline';
		uploadMessage.textContent = `File "${fileName}" selected.`;
	}


</script>
<script>
	const fileInput = document.getElementById('fileInput');
	const submitButton = document.getElementById('submitButton');

	fileInput.addEventListener('change', function () {
		if (fileInput.files.length > 0) {
			const fileName = fileInput.files[0].name;
			const filePath = `/uploads/${fileName}`; // Adjust as per your logic

			// Dynamically set the filePath route value in the submit button
			submitButton.setAttribute('asp-route-filePath', filePath);

			// Show the upload message
			const uploadMessage = document.getElementById('uploadMessage');
			uploadMessage.style.display = 'inline';
			uploadMessage.textContent = `File "${fileName}" selected.`;
		} else {
			// Clear the filePath route value if no file is selected
			submitButton.removeAttribute('asp-route-filePath');
		}
	});
</script>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}